//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ScreenSizeComponent screenSize { get { return (ScreenSizeComponent)GetComponent(GameComponentsLookup.ScreenSize); } }
    public bool hasScreenSize { get { return HasComponent(GameComponentsLookup.ScreenSize); } }

    public void AddScreenSize(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.ScreenSize;
        var component = (ScreenSizeComponent)CreateComponent(index, typeof(ScreenSizeComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceScreenSize(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.ScreenSize;
        var component = (ScreenSizeComponent)CreateComponent(index, typeof(ScreenSizeComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveScreenSize() {
        RemoveComponent(GameComponentsLookup.ScreenSize);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScreenSize;

    public static Entitas.IMatcher<GameEntity> ScreenSize {
        get {
            if (_matcherScreenSize == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScreenSize);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScreenSize = matcher;
            }

            return _matcherScreenSize;
        }
    }
}
