//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DirectionAxisComponent directionAxis { get { return (DirectionAxisComponent)GetComponent(GameComponentsLookup.DirectionAxis); } }
    public bool hasDirectionAxis { get { return HasComponent(GameComponentsLookup.DirectionAxis); } }

    public void AddDirectionAxis(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.DirectionAxis;
        var component = (DirectionAxisComponent)CreateComponent(index, typeof(DirectionAxisComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDirectionAxis(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.DirectionAxis;
        var component = (DirectionAxisComponent)CreateComponent(index, typeof(DirectionAxisComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDirectionAxis() {
        RemoveComponent(GameComponentsLookup.DirectionAxis);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDirectionAxis;

    public static Entitas.IMatcher<GameEntity> DirectionAxis {
        get {
            if (_matcherDirectionAxis == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DirectionAxis);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDirectionAxis = matcher;
            }

            return _matcherDirectionAxis;
        }
    }
}
